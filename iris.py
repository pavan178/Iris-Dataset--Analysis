# -*- coding: utf-8 -*-
"""iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EiX0dXKT6XUniR62c6CDPzLcg7YelC7n
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Step 1: Load the dataset
data = pd.read_csv('/content/Iris.csv')

data

# Step 2: Data Cleaning and Preprocessing
# Handle missing values
data.dropna(inplace=True)

# Step 3: Data Visualization
# Histogram
plt.hist(data['SepalLengthCm'], bins=10)
plt.xlabel('Sepal Length')
plt.ylabel('Frequency')
plt.title('Histogram of Sepal Length')
plt.show()

# Scatter plot
plt.scatter(data['SepalLengthCm'], data['SepalWidthCm'])
plt.xlabel('Sepal Length')
plt.ylabel('Sepal Width')
plt.title('Scatter plot of Sepal Length vs. Sepal Width')
plt.show()

# Step 4: Data Transformation and Feature Engineering
# Create a new feature: petal area
data['petal_area'] = data['PetalLengthCm'] * data['PetalWidthCm']

data['petal_area']

# Step 5: Descriptive Statistics
mean_sepal_length = np.mean(data['SepalLengthCm'])
median_petal_width = np.median(data['PetalWidthCm'])
std_dev_petal_length = np.std(data['PetalLengthCm'])
print(mean_sepal_length,median_petal_width,std_dev_petal_length)

# Step 6: Additional EDA Techniques (using Seaborn)
# Box plot
sns.boxplot(x='Species', y='SepalLengthCm', data=data)
plt.xlabel('Species')
plt.ylabel('Sepal Length')
plt.title('Box Plot of Sepal Length by Species')
plt.show()

# Correlation matrix
correlation_matrix = data.corr()
sns.heatmap(correlation_matrix, annot=True)
plt.title('Correlation Matrix')
plt.show()

# Step 2: Data Cleaning and Preprocessing
# Handle missing values
data.dropna(inplace=True)

data.columns

# Histogram
plt.hist(data['SepalLengthCm'], bins=10)
plt.xlabel('Sepal Length')
plt.ylabel('Frequency')
plt.title('Histogram of Sepal Length')
plt.show()

# Step 3: Data Visualization


# Scatter plot
plt.scatter(data['SepalLengthCm'], data['SepalWidthCm'])
plt.xlabel('Sepal Length')
plt.ylabel('Sepal Width')
plt.title('Scatter plot of Sepal Length vs. Sepal Width')
plt.show()

# Step 4: Data Transformation and Feature Engineering
# Create a new feature: petal area
data['petal_area'] = data['petal_length'] * data['petal_width']

# Step 5: Descriptive Statistics
mean_sepal_length = np.mean(data['sepal_length'])
median_petal_width = np.median(data['petal_width'])
std_dev_petal_length = np.std(data['petal_length'])

# Step 6: Additional EDA Techniques (using Seaborn)
# Box plot
sns.boxplot(x='species', y='sepal_length', data=data)
plt.xlabel('Species')
plt.ylabel('Sepal Length')
plt.title('Box Plot of Sepal Length by Species')
plt.show()

# Correlation matrix
correlation_matrix = data.corr()
sns.heatmap(correlation_matrix, annot=True)
plt.title('Correlation Matrix')
plt.show()